services:
  frontend:
    image:
    environment:
      VIRTUAL_HOST: prod.invest.yapa.one
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: prod.invest.yapa.one
    networks:
      - ingress

  db:
    image: "postgres:15-alpine"
    restart: unless-stopped
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    env_file: ./.env

  web:
    image:
    volumes:
      - django-static:/var/www/django/static
    depends_on:
      - db
    networks:
      - webnet
    env_file: .env
    environment:
      DJANGO_DATABASE_HOST: db
    command: /usr/local/bin/start-web-server
    healthcheck:
      # We use `$$` here because:
      # one `$` goes to shell,
      # one `$` goes to `docker-compose.yml` escaping
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8000/health/?format=json
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image:
    command:
      - nginx
    networks:
      - webnet
      - ingress
    volumes:
      - django-static:/var/www/django/static
    env_file: .env
    depends_on:
      - web
      - frontend
    environment:
      VIRTUAL_HOST: prod.api.invest.yapa.one
      VIRTUAL_PORT: 8000
      LETSENCRYPT_HOST: prod.api.invest.yapa.one

  # Celery worker
  celery:
    image:
    command: celery -A server.celery worker -l info
    env_file: .env
    healthcheck:
      test: celery -A server.celery inspect ping -d celery@$$HOSTNAME
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - webnet
    depends_on:
      - rabbitmq
#
#  # Celery Beat
  beat:
    image:
    command: celery -A server.celery beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file: .env
    healthcheck:
      test: celery -A server.celery inspect ping
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - webnet
    depends_on:
      - rabbitmq

  rabbitmq:
    image: "rabbitmq:3.8-management"
    networks:
      - webnet

  gotenberg:
    image: thecodingmachine/gotenberg:6
    networks:
      - webnet

  ollama:
    image: ollama/ollama
    volumes:
      - ollama:/root/.ollama
    command: ollama run llama3
    networks:
      - webnet

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    volumes:
      - ./pgbackups:/backups
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=postgres
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
    env_file:
      - .env

networks:
  # Network for your internals, use it by default:
  webnet:
  ingress:
    external:
      name: ingress_default

volumes:
  django-static:
  ollama:
